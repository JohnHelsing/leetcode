    class TwoSum {

        private List<Integer> array;
        private boolean isSorted;

        private HashMap<Integer, Integer> numsMap;

        public TwoSum() {
            // 有序数组法
            array = new ArrayList<>();
            isSorted = false;

            // 哈希表法
            numsMap = new HashMap<>();
        }

        public void add(int number) {
            // 有序数组法
            array.add(number);
            isSorted = false;

            // 哈希表法
            numsMap.put(number, 0);
        }

        public boolean find(int value) {
            // 有序数组法
            if (isSorted) {
                Collections.sort(array);
                isSorted = true;
            }
            // 双指针
            int left = 0, right = array.size() - 1;
            while (left < right) {
                int sum = array.get(left) + array.get(right);
                if (sum < value) {
                    left++;
                } else if (sum > value) {
                    right--;
                } else {
                    return true;
                }
            }
            return false;

        }
    }

/**
 * Your TwoSum object will be instantiated and called as such:
 * TwoSum obj = new TwoSum();
 * obj.add(number);
 * boolean param_2 = obj.find(value);
 */

//total_testcases:19
//total_correct:12
//input_formatted:["TwoSum","add","add","add","find"]
[[],[3],[1],[2],[3]]
//expected_output:[null,null,null,null,true]
//code_output:[null,null,null,null,false]
